import Head from "next/head";
import { useState } from "react";
import styles from "@/styles/Login.module.scss";
import style from "@/styles/VerificationUI.module.scss";
import { passwordRegex } from "@/lib/emailregex";
import { auth } from "@/firebase";
import { useRouter } from "next/router";
import { handleResetPassword } from "@/lib/auth_handle_reset_password";

const ResetPasswordUI = ({ actionCode }) => {
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");

  const router = useRouter();

  const alertMsg = (type) => {
    if (type === "wrong format")
      setError(
        "Password must have atleast 8 characters consisting of atleast 1 uppercase and 1 lowercase alphabet, 1 number and 1 special character"
      );
    if (type == "confirmation error")
      setError(
        "Oops, there was an error occurred during confirmation. The code might have expired."
      );
    if (type == "expired link")
      setError("Oops, there was an error. The link has expired");
    if (type == "success") setError("success");
  };

  const handleResetEmail = async (e) => {
    e.preventDefault();

    //check if email is in the correct format
    if (!passwordRegex.test(password)) {
      alertMsg("wrong format");
      return;
    }

    await handleResetPassword(auth, actionCode, password, alertMsg);
  };

  const handleClick = () => router.push("/");

  return (
    <>
      <Head>
        <title>Password Reset </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      {error == "success" ? (
        <main className={style.veri_page}>
          <section>
            <p className={style.confirmation_text}>
              Your password has been changed successfully.
            </p>
            <button className={style.continue_btn} onClick={handleClick}>
              continue to home page
            </button>
          </section>
        </main>
      ) : (
        <main className={styles.login}>
          <article className={styles.formContainer}>
            <h2 className={styles.title}>Reset Password</h2>
            <form noValidate onSubmit={handleResetEmail}>
              <div>
                <label htmlFor="password">New Password</label>
                <input
                  id="password"
                  name="password"
                  className={styles.login_input}
                  type="password"
                  value={password}
                  onChange={(e) => {
                    setPassword(e.target.value);
                    setError("");
                  }}
                />
                <span>{error}</span>
              </div>
              <div></div>
              <article className={styles.loginbtn}>
                {error == "confirmation error" || error == "expired link" ? (
                  <button className={style.continue_btn} onClick={handleClick}>
                    continue to home page
                  </button>
                ) : (
                  <button id="login-btn" type="submit">
                    Change Password
                  </button>
                )}
              </article>
            </form>
          </article>
        </main>
      )}
    </>
  );
};

export default ResetPasswordUI;
