import { emailRegex } from "@/lib/emailregex";
import Head from "next/head";
import { useState } from "react";
import styles from "@/styles/Login.module.scss";
import Link from "next/link";
import signUp from "@/lib/signup";
import { toast } from "react-toastify";

export default function SignUpPage({ data }) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [password2, setPassword2] = useState("");
  const [alert, setAlert] = useState({ email: "", password: "", verify: "" });

  const alertMsg = (type) => {
    if (type === "email") {
      setAlert({ ...alert, email: "Please type in a valid email" });
    } else if (type === "Verify") {
      setAlert({
        ...alert,
        verify: `A confirmation mail has been sent to ${email}. Click on the link to verify your account.`,
      });
    } else if (type === "password") {
      setAlert({ ...alert, password: "Password does not match" });
    } else {
      setAlert({
        ...alert,
        password: "Password must have atleast 6 characters",
      });
    }
  };

  const handleSignUp = async (e) => {
    e.preventDefault();

    //check if email is in the correct format
    if (!emailRegex.test(email)) {
      alertMsg("email");
      return;
    }

    //check if password is atleast 6 characters
    if (password.trim().length < 6) {
      alertMsg("pw length");
      return;
    }

    //check if password matches
    if (password.trim() !== password2.trim()) {
      alertMsg("password");
      return;
    }

    const { error } = await signUp(email, password.trim());

    if (error) {
      //use toastify to alert user login attempt has failed
      toast.error(`Error during sign up. Please try again later. `, {
        position: toast.POSITION.TOP_CENTER,
      });
      console.log(error.message);
      // then return
      return;
    }

    //inform client to verify email
    alertMsg("Verify");
  };

  const backgroundImageUrl = `https://image.tmdb.org/t/p/original/${data.trendDay.results[0].poster_path}`;

  return (
    <>
      <Head>
        <title> Sign Up || Flexmovies </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <section
        style={{ background: `url(${backgroundImageUrl})` }}
        className={styles.background}
      ></section>
      <section className={styles.login}>
        <article>
          <h1>Welcome to Flexmovies</h1>
          <form noValidate onSubmit={handleSignUp}>
            <h3>Sign Up</h3>
            <p className={styles.verify}>{alert.verify}</p>
            <div>
              <label htmlFor="email">Email</label>
              <input
                id="email"
                name="email"
                className={styles.login_input}
                type="text"
                placeholder="Your email"
                value={email}
                onChange={(e) => {
                  setEmail(e.target.value);
                  setAlert('');
                }}
              />
              <span>{alert.email}</span>
            </div>
            <div>
              <label htmlFor="password">Password</label>
              <input
                id="password"
                name="password"
                className={styles.login_input}
                type="password"
                value={password}
                onChange={(e) => {
                  setPassword(e.target.value);
                  setAlert('');
                }}
              />
              <span>{alert.password}</span>
            </div>
            <div>
              <label htmlFor="password">Confirm Password</label>
              <input
                id="password2"
                name="password"
                className={styles.login_input}
                type="password"
                value={password2}
                onChange={(e) => {
                  setPassword2(e.target.value);
                  setAlert('');
                }}
              />
              <span>{alert.password}</span>
            </div>
            <article className={styles.loginbtn}>
              <button id="login-btn" type="submit">
                Sign Up
              </button>
              <p>
                Already have an account?{" "}
                <Link href="/login" className={styles.link}>
                  Click here to Sign In
                </Link>
              </p>
            </article>
          </form>
        </article>
      </section>
    </>
  );
}
